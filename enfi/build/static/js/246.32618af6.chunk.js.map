{"version":3,"file":"static/js/246.32618af6.chunk.js","mappings":"8RAoIA,EA7HkB,WACKA,EAAAA,GAAOC,OAAMC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,ygBAC9B,GAGA,GAWA,IAfJ,IAwBAC,GAA8BC,EAAAA,EAAAA,WAAS,GAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAAgCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GACtBG,EAAUC,aAAaC,QAAQ,WAkBrC,OAhBAC,EAAAA,EAAAA,YAAU,WAEJC,MAAM,oDAADC,OAAqDL,IAC3DM,MAAK,SAACC,GAAQ,OAAKA,EAASC,MAAM,IAClCF,MAAK,SAACG,GACLC,QAAQC,IAAIF,GACZV,EAAYU,GAEZd,GAAW,EACb,IACCiB,OAAM,SAACC,GACNH,QAAQG,MAAM,uBAAwBA,EACxC,GACJ,GAAG,KAIDC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EAEEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uFAAsFF,UAClGC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,kBAAiBF,SAAC,yBA4BlCrB,GACAsB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQF,UACpBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaF,SAAC,kBAGjCC,EAAAA,EAAAA,KAAA,OAAKE,MAAO,CAAEC,SAAU,QAASJ,UAC/BD,EAAAA,EAAAA,MAAA,SAAOG,UAAU,oBAAmBF,SAAA,EAClCC,EAAAA,EAAAA,KAAA,SAAAD,UACAD,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UAEJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gBACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gBACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qBACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,uBAGRC,EAAAA,EAAAA,KAAA,SAAAD,SACGjB,EAASsB,KAAI,SAACC,EAAMC,GAAK,OACxBR,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKO,EAAQ,KACbN,EAAAA,EAAAA,KAAA,MAAAD,SAAKM,EAAKrB,WACVgB,EAAAA,EAAAA,KAAA,MAAAD,SAAKM,EAAKE,eAEVP,EAAAA,EAAAA,KAAA,MAAAD,SAAKM,EAAKG,aACVR,EAAAA,EAAAA,KAAA,MAAAD,SAAKM,EAAKI,eACVT,EAAAA,EAAAA,KAAA,MAAAD,SAAKM,EAAKK,eACVV,EAAAA,EAAAA,KAAA,MAAAD,SAAKM,EAAKM,YACVX,EAAAA,EAAAA,KAAA,MAAAD,SAAKM,EAAKO,UACVZ,EAAAA,EAAAA,KAAA,MAAAD,SAAKM,EAAKQ,gBAAkB,SAC5Bb,EAAAA,EAAAA,KAAA,MAAAD,SAAKM,EAAKS,SACVd,EAAAA,EAAAA,KAAA,MAAAD,SAAKM,EAAKU,aAAe,UAZlBV,EAAKW,SAaT,aAQnB,C","sources":["views/directory/mynetworks/levelteam/LevelTeam.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport 'src/views/directory/stacking/addfunds/table.scss'\r\nimport { Button } from 'reactstrap'\r\nimport styled from 'styled-components'\r\nimport './loader.css'; // Import your CSS file\r\n\r\n\r\nconst LevelTeam = () => {\r\n  const CustomSelect = styled.select`\r\n    ${'' /* box-sizing: border-box; */}\r\n    text-align: left;\r\n    padding: 10px;\r\n    ${'' /* background-color: red; */}\r\n    border: none;\r\n    border-bottom: 3px solid #7f4eb5;\r\n    border-radius: 0;\r\n    background-color: transparent;\r\n    color: #fff;\r\n    font-size: 16px;\r\n    min-width: 10vw;\r\n    outline: none;\r\n    cursor: pointer;\r\n    transition: border-bottom 0.3s ease;\r\n    ${'' /* appearance: none; */}\r\n    /* Remove the default dropdown arrow */\r\n\r\n    option {\r\n      padding: 10px; /* Add padding to the options */\r\n      background-color: #3c215e;\r\n      color: #fff;\r\n    }\r\n  `\r\n  const [loading, setLoading] = useState(true); // Step 1: Add loading state\r\n  const [userData, setUserData] = useState([]);\r\n  const LoginId = localStorage.getItem('LoginId'); // Get the email ID from local storage\r\n\r\n  useEffect(() => {\r\n    // Fetch your data from the API\r\n        fetch(`http://localhost:5000/user-api/get-downline-list/${LoginId}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data)\r\n        setUserData(data);\r\n        // console.log(data)\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching data:', error);\r\n      });\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div>\r\n       \r\n      <div className=\"d-flex flex-column flex-lg-row align-items-baseline justify-content-lg-between  my-2\">\r\n         <h5 className=\"text-white my-2\">My Downline Report</h5>\r\n         \r\n       {/* <div className=\"d-flex flex-column flex-lg-row gap-2   text-white align-items-start\">\r\n          <CustomSelect>\r\n            <option value=\"option\" disabled>\r\n              Select Level\r\n            </option>\r\n            <option value=\"option1\">level 1</option>\r\n            <option value=\"option2\">level 2</option>\r\n            <option value=\"option3\">level 3</option>\r\n            <option value=\"option4\">level 4</option>\r\n            <option value=\"option5\">level 5</option>\r\n            <option value=\"option6\">level 6</option>\r\n            <option value=\"option7\">level 7</option>\r\n            <option value=\"option8\">level 8</option>\r\n            <option value=\"option9\">level 9</option>\r\n            <option value=\"option10\">level 10</option>\r\n            <option value=\"option11\">level 11</option>\r\n            <option value=\"option12\">level 12</option>\r\n            <option value=\"option13\">level 13</option>\r\n            <option value=\"option14\">level 14</option>\r\n            <option value=\"option15\">level 15</option>\r\n          </CustomSelect>\r\n          <Button className=\"px-4 py-2\" style={{ backgroundColor: '#543279', color: 'white' }}>\r\n            Search\r\n          </Button>\r\n        </div> */}\r\n      </div>\r\n      {loading ? ( // Step 2: Conditionally render the loader\r\n       <div className=\"loader\">\r\n          <div className=\"loader-text\">Loading...</div>\r\n        </div>\r\n      ) : (\r\n      <div style={{ overflow: 'auto' }}>\r\n        <table className=\"custom-table mt-2\">\r\n          <thead >\r\n          <tr>\r\n              <th>Sr. No.</th>\r\n              <th>Member ID</th>\r\n              <th>Name</th>\r\n              {/* <th>Email</th> */}\r\n              <th>Sponsor ID</th>\r\n              <th>Sponsor Name</th>\r\n              <th>Joining Date</th>\r\n              <th>Mobile No.</th>\r\n              <th>Status</th>\r\n              <th>Activation Date</th>\r\n              <th>Level</th>\r\n              <th>Package Name</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {userData.map((user, index) => (\r\n              <tr key={user.FK_MemId}>\r\n                <td>{index + 1}</td>\r\n                <td>{user.LoginId}</td>\r\n                <td>{user.DisplayName}</td>\r\n                {/* <td>{user.LoginId}</td> */}\r\n                <td>{user.SponsorId}</td>\r\n                <td>{user.SponsorName}</td>\r\n                <td>{user.JoiningDate}</td>\r\n                <td>{user.MobileNo}</td>\r\n                <td>{user.Status}</td>\r\n                <td>{user.ActivationDate || 'N/A'}</td>\r\n                <td>{user.Level}</td>\r\n                <td>{user.PackageName || 'N/A'}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LevelTeam\r\n"],"names":["styled","select","_templateObject","_taggedTemplateLiteral","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","userData","setUserData","LoginId","localStorage","getItem","useEffect","fetch","concat","then","response","json","data","console","log","catch","error","_jsxs","children","_jsx","className","style","overflow","map","user","index","DisplayName","SponsorId","SponsorName","JoiningDate","MobileNo","Status","ActivationDate","Level","PackageName","FK_MemId"],"sourceRoot":""}