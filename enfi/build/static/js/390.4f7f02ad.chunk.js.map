{"version":3,"file":"static/js/390.4f7f02ad.chunk.js","mappings":"kWA2PA,UA3OsB,YAEHA,EAAAA,EAAAA,MAAjB,IAESC,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,QAAQ,IACpDG,QAAQC,IAAIJ,GAEf,IAAAK,GAAgCC,EAAAA,EAAAA,UAAS,CAGvCC,UAAW,GACXC,QAAS,GACTC,SAAU,GACVC,QAAS,GACTC,MAAO,GACPC,QAAS,GACTC,cAAe,GACfC,QAAS,GACTC,WAAY,MACZC,GAAAC,EAAAA,EAAAA,GAAAZ,EAAA,GAZKa,EAAQF,EAAA,GAAEG,EAAWH,EAAA,IAc5BI,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAWC,aAAaC,QAAQ,YACtCC,MAAM,kDAADC,OAAmDJ,IACrDK,MAAK,SAACC,GAAQ,OAAKA,EAASC,MAAM,IAClCF,MAAK,SAACG,GAGL,GAAIA,EAAKC,OAAS,EAAG,CACnB,IAAM9B,EAAW6B,EAAK,GACtBV,EAAY,CAGVZ,UAAWP,EAAS+B,YACpBvB,QAASR,EAASgC,YAClBvB,SAAUT,EAASS,SACnBC,QAASV,EAASiC,MAClBtB,MAAOX,EAASkC,MAChBtB,QAASZ,EAASY,QAClBC,cAAeb,EAASmC,cACxBrB,QAASd,EAASc,QAClBC,WAAY,KAEhB,CACF,IACCqB,OAAM,SAACC,GAAK,OAAKlC,QAAQkC,MAAM,uBAAwBA,EAAM,GAClE,GAAG,IAEH,IAAMC,EAAe,SAACC,GACpB,IAAAC,EAAwBD,EAAEE,OAAlBC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MACdxB,GAAWyB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACR1B,GAAQ,IAAA2B,EAAAA,EAAAA,GAAA,GACVH,EAAOC,IAEZ,EAgCA,OACEG,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAAAC,UACRF,EAAAA,EAAAA,KAACG,EAAAA,EAAG,CAACC,UAAU,yBAAwBF,UACrCG,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,EAAEL,SAAA,EACTF,EAAAA,EAAAA,KAACQ,EAAAA,EAAI,CAAAN,UACHG,EAAAA,EAAAA,MAACI,EAAAA,EAAQ,CAACC,MAAO,CAAEC,gBAAiB,WAAYT,SAAA,EAC9CF,EAAAA,EAAAA,KAAA,MAAII,UAAU,OAAMF,SAAC,kBACrBF,EAAAA,EAAAA,KAACY,EAAAA,EAAI,CAAAV,UACHG,EAAAA,EAAAA,MAACF,EAAAA,EAAG,CAAAD,SAAA,EACFF,EAAAA,EAAAA,KAACM,EAAAA,EAAG,CAACC,GAAI,EAAEL,UACTG,EAAAA,EAAAA,MAACQ,EAAAA,EAAS,CAAAX,SAAA,EACRF,EAAAA,EAAAA,KAACc,EAAAA,EAAK,CAACC,IAAI,YAAWb,SAAC,gBACvBF,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CACJN,MAAO,CAAEC,gBAAiB,aAC1BM,KAAK,OACLrB,KAAK,YACLsB,GAAG,YACHrB,MAAO3C,EAASiE,UACfC,UAAQ,UAIfpB,EAAAA,EAAAA,KAACM,EAAAA,EAAG,CAACC,GAAI,EAAEL,UACTG,EAAAA,EAAAA,MAACQ,EAAAA,EAAS,CAAAX,SAAA,EACRF,EAAAA,EAAAA,KAACc,EAAAA,EAAK,CAACC,IAAI,cAAab,SAAC,kBACzBF,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CACJN,MAAO,CAAEC,gBAAiB,aAC1BM,KAAK,OACLrB,KAAK,cACLsB,GAAG,cACHrB,MAAO3C,EAASmE,YAChBD,UAAQ,oBAQtBpB,EAAAA,EAAAA,KAACQ,EAAAA,EAAI,CAACJ,UAAU,OAAMF,UACpBG,EAAAA,EAAAA,MAACI,EAAAA,EAAQ,CAACC,MAAO,CAAEC,gBAAiB,WAAYT,SAAA,EAC9CF,EAAAA,EAAAA,KAAA,MAAII,UAAU,OAAMF,SAAC,sBACrBG,EAAAA,EAAAA,MAACO,EAAAA,EAAI,CAAAV,SAAA,EACHG,EAAAA,EAAAA,MAACQ,EAAAA,EAAS,CAAAX,SAAA,EACRF,EAAAA,EAAAA,KAACc,EAAAA,EAAK,CAACC,IAAI,OAAMb,SAAC,UAClBF,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CACJN,MAAO,CAAEC,gBAAiB,aAC1BM,KAAK,OACLrB,KAAK,YACLsB,GAAG,OACHrB,MAAOzB,EAASX,UACZ6D,SAAU9B,EACd+B,YAAY,mBAGhBlB,EAAAA,EAAAA,MAACQ,EAAAA,EAAS,CAAAX,SAAA,EACRF,EAAAA,EAAAA,KAACc,EAAAA,EAAK,CAACC,IAAI,UAASb,SAAC,aACrBF,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CACJN,MAAO,CAAEC,gBAAiB,aAC1BM,KAAK,OACLrB,KAAK,UACLsB,GAAG,UACHrB,MAAOzB,EAASV,QACZ4D,SAAU9B,EACd+B,YAAY,gBACZC,UAAQ,QAGZnB,EAAAA,EAAAA,MAACQ,EAAAA,EAAS,CAAAX,SAAA,EACRF,EAAAA,EAAAA,KAACc,EAAAA,EAAK,CAACC,IAAI,SAAQb,SAAC,eACpBF,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CACJN,MAAO,CAAEC,gBAAiB,aAC1BM,KAAK,OACLrB,KAAK,WACLsB,GAAG,SACHrB,MAAOzB,EAAST,SACZ2D,SAAU9B,EACd+B,YAAY,kBACZC,UAAQ,QAGZnB,EAAAA,EAAAA,MAACQ,EAAAA,EAAS,CAAAX,SAAA,EACRF,EAAAA,EAAAA,KAACc,EAAAA,EAAK,CAACC,IAAI,UAASb,SAAC,WACrBF,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CACJN,MAAO,CAAEC,gBAAiB,aAC1BM,KAAK,QACLrB,KAAK,UACLsB,GAAG,QACHrB,MAAOzB,EAASR,QACZ0D,SAAU9B,EACd+B,YAAY,gBACZC,UAAQ,QAGZnB,EAAAA,EAAAA,MAACQ,EAAAA,EAAS,CAAAX,SAAA,EACRF,EAAAA,EAAAA,KAACc,EAAAA,EAAK,CAACC,IAAI,MAAKb,SAAC,SACjBF,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CACJN,MAAO,CAAEC,gBAAiB,aAC1BM,KAAK,OACLrB,KAAK,QACLsB,GAAG,MACHrB,MAAOzB,EAAUP,MACbyD,SAAU9B,EACd+B,YAAY,YACZC,UAAQ,QAGZnB,EAAAA,EAAAA,MAACQ,EAAAA,EAAS,CAAAX,SAAA,EACRF,EAAAA,EAAAA,KAACc,EAAAA,EAAK,CAACC,IAAI,QAAOb,SAAC,WACnBF,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CACJN,MAAO,CAAEC,gBAAiB,aAC1BM,KAAK,OACLrB,KAAK,UACLsB,GAAG,QACHrB,MAAOzB,EAASN,QACZwD,SAAU9B,EACd+B,YAAY,cACZC,UAAQ,QAGZnB,EAAAA,EAAAA,MAACQ,EAAAA,EAAS,CAAAX,SAAA,EACRF,EAAAA,EAAAA,KAACc,EAAAA,EAAK,CAACC,IAAI,gBAAeb,SAAC,oBAC3BF,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CACJN,MAAO,CAAEC,gBAAiB,aAC1BM,KAAK,OACLrB,KAAK,gBACLsB,GAAG,gBACHrB,MAAOzB,EAASL,cACZuD,SAAU9B,EACd4B,UAAQ,QAGZpB,EAAAA,EAAAA,KAAA,OAAKI,UAAU,mBAAkBF,UACrCF,EAAAA,EAAAA,KAACyB,EAAAA,EAAM,CAACR,KAAK,SAAWS,QAnKb,WACnB,IAAMC,GAAW7B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACZ1B,GAAQ,IACXH,WAAY,MAGdS,MAAM,iDAADC,OAAkDP,EAASJ,SAAW,CACzE4D,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUL,KAEpB/C,MAAK,SAACC,GAAQ,OAAKA,EAASC,MAAM,IAClCF,MAAK,SAAC+C,GAEqB,MAAxBA,EAAYM,SAEd5E,QAAQC,IAAI,mBAAoBqE,GAChCO,OAAOC,MAAM,uCAGb9E,QAAQC,IAAI,yBAA0BqE,GACtCO,OAAOC,MAAM,gCAEjB,IACG7C,OAAM,SAACC,GAAK,OAAKlC,QAAQkC,MAAM,0BAA2BA,EAAM,GACrE,EAyIUa,UAAU,YAAYM,MAAO,CAAEC,gBAAiB,UAAWyB,MAAO,SAAUlC,SAAC,wCAYzF,C","sources":["views/directory/updateProfile/Update.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n} from 'reactstrap'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\n\r\nconst UpDateProfile = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  // console.log(address)\r\n     const userData = useSelector(state => state.userData);\r\n     console.log(userData)\r\n\r\n  const [formData, setFormData] = useState({\r\n    // sponsorId: '',\r\n    // sponsorName: '',\r\n    FirstName: '',\r\n    Country: '',\r\n    MobileNo: '',\r\n    EmailId: '',\r\n    PanNO: '',\r\n    AdharNo: '',\r\n    walletAddress: '',\r\n    LoginId: '', // Store LoginId\r\n    ActionType: 'U',\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Fetch the data from the API endpoint using FK_MemId\r\n    const FK_MemId = localStorage.getItem('FK_MemId');\r\n    fetch(`http://localhost:5000/user-api/get-member-data/${FK_MemId}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // console.log('Fetched Data:', data); // Add this line\r\n        // Assuming the data returned is an object with keys matching the form field names\r\n        if (data.length > 0) {\r\n          const userData = data[0]; // Access the first item in the array\r\n          setFormData({\r\n            // sponsorId: userData.FK_MemId, // Correct the keys to match your form fields\r\n            // sponsorName: userData.LoginId,\r\n            FirstName: userData.DisplayName,\r\n            Country: userData.CountryName,\r\n            MobileNo: userData.MobileNo,\r\n            EmailId: userData.Email,\r\n            PanNO: userData.PanNo,\r\n            AdharNo: userData.AdharNo,\r\n            walletAddress: userData.WalletAddress,\r\n            LoginId: userData.LoginId,\r\n            ActionType: 'u',\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => console.error('Error fetching data:', error));\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    const updatedData = {\r\n      ...formData,\r\n      ActionType: 'U',\r\n    };\r\n    // Send a PUT request to update the profile\r\n    fetch(`http://localhost:5000/user-api/update-profile/${formData.LoginId}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(updatedData),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((updatedData) => {\r\n         // Check the value of the 'message' property\r\n      if (updatedData.message === '2') {\r\n        // The update was successful\r\n        console.log('Profile updated:', updatedData);\r\n        window.alert('Your profile updated successfully');\r\n      } else {\r\n        // The update failed\r\n        console.log('Profile update failed:', updatedData);\r\n        window.alert('Failed to update the profile');\r\n      }\r\n    })\r\n      .catch((error) => console.error('Error updating profile:', error));\r\n  };\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-center\">\r\n        <Col md={8}>\r\n          <Card>\r\n            <CardBody style={{ backgroundColor: '#eee0fc' }}>\r\n              <h2 className=\"mb-4\">Sponsor Info</h2>\r\n              <Form>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for=\"sponsorId\">Sponsor ID</Label>\r\n                      <Input\r\n                        style={{ backgroundColor: '#5432797b' }}\r\n                        type=\"text\"\r\n                        name=\"sponsorId\"\r\n                        id=\"sponsorId\"\r\n                        value={userData.SponsorID}\r\n                         readOnly\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for=\"sponsorName\">Sponsor Name</Label>\r\n                      <Input\r\n                        style={{ backgroundColor: '#5432797b' }}\r\n                        type=\"text\"\r\n                        name=\"sponsorName\"\r\n                        id=\"sponsorName\"\r\n                        value={userData.SponsorName}\r\n                        readOnly\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n          <Card className=\"mt-4\">\r\n            <CardBody style={{ backgroundColor: '#eee0fc' }}>\r\n              <h2 className=\"mb-4\">Personal Details</h2>\r\n              <Form >\r\n                <FormGroup>\r\n                  <Label for=\"name\">Name</Label>\r\n                  <Input\r\n                    style={{ backgroundColor: '#5432797b' }}\r\n                    type=\"text\"\r\n                    name=\"FirstName\"\r\n                    id=\"name\"\r\n                    value={formData.FirstName}\r\n                        onChange={handleChange}\r\n                    placeholder=\"Enter Name\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"country\">Country</Label>\r\n                  <Input\r\n                    style={{ backgroundColor: '#5432797b' }}\r\n                    type=\"text\"\r\n                    name=\"Country\"\r\n                    id=\"country\"\r\n                    value={formData.Country}\r\n                        onChange={handleChange}\r\n                    placeholder=\"Enter Country\"\r\n                    required // Add required attribute\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"mobile\">Mobile No</Label>\r\n                  <Input\r\n                    style={{ backgroundColor: '#5432797b' }}\r\n                    type=\"text\"\r\n                    name=\"MobileNo\"\r\n                    id=\"mobile\"\r\n                    value={formData.MobileNo}\r\n                        onChange={handleChange}\r\n                    placeholder=\"Enter Mobile No\"\r\n                    required // Add required attribute\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"EmailId\">Email</Label>\r\n                  <Input\r\n                    style={{ backgroundColor: '#5432797b' }}\r\n                    type=\"email\"\r\n                    name=\"EmailId\"\r\n                    id=\"email\"\r\n                    value={formData.EmailId}\r\n                        onChange={handleChange}\r\n                    placeholder=\"Enter EmailId\"\r\n                    required // Add required attribute\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"pan\">PAN</Label>\r\n                  <Input\r\n                    style={{ backgroundColor: '#5432797b' }}\r\n                    type=\"text\"\r\n                    name=\"PanNO\"\r\n                    id=\"pan\"\r\n                    value={formData. PanNO}\r\n                        onChange={handleChange}\r\n                    placeholder=\"Enter PAN\"\r\n                    required // Add required attribute\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"adhar\">Adhar</Label>\r\n                  <Input\r\n                    style={{ backgroundColor: '#5432797b' }}\r\n                    type=\"text\"\r\n                    name=\"AdharNo\"\r\n                    id=\"adhar\"\r\n                    value={formData.AdharNo}\r\n                        onChange={handleChange}\r\n                    placeholder=\"Enter Adhar\"\r\n                    required // Add required attribute\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"walletAddress\">Wallet Address</Label>\r\n                  <Input\r\n                    style={{ backgroundColor: '#5432797b' }}\r\n                    type=\"text\"\r\n                    name=\"walletAddress\"\r\n                    id=\"walletAddress\"\r\n                    value={formData.walletAddress}\r\n                        onChange={handleChange}\r\n                    readOnly\r\n                  />\r\n                </FormGroup>\r\n                <div className=\"text-center mt-4\">\r\n            <Button type=\"button\"   onClick={handleUpdate}\r\n            className=\"px-4 py-2\" style={{ backgroundColor: '#543279', color: 'white' }}>\r\n              Update Your Details\r\n            </Button>\r\n          </div>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n    \r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default UpDateProfile\r\n"],"names":["useDispatch","userData","useSelector","state","console","log","_useState","useState","FirstName","Country","MobileNo","EmailId","PanNO","AdharNo","walletAddress","LoginId","ActionType","_useState2","_slicedToArray","formData","setFormData","useEffect","FK_MemId","localStorage","getItem","fetch","concat","then","response","json","data","length","DisplayName","CountryName","Email","PanNo","WalletAddress","catch","error","handleChange","e","_e$target","target","name","value","_objectSpread","_defineProperty","_jsx","Container","children","Row","className","_jsxs","Col","md","Card","CardBody","style","backgroundColor","Form","FormGroup","Label","for","Input","type","id","SponsorID","readOnly","SponsorName","onChange","placeholder","required","Button","onClick","updatedData","method","headers","body","JSON","stringify","message","window","alert","color"],"sourceRoot":""}