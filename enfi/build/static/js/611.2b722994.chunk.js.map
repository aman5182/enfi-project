{"version":3,"file":"static/js/611.2b722994.chunk.js","mappings":"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","sources":["views/directory/reset/ResetPassword.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n} from 'reactstrap'\r\n\r\n\r\n\r\n\r\nconst ResetPasswordForm = () => {\r\n\r\n  const [NewPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [LoginId, setLoginId] = useState(''); // Initialize with an empty string\r\n\r\n  useEffect(() => {\r\n    // Get the loginId from local storage and set it in the state\r\n    const storedLoginId = localStorage.getItem('LoginId');\r\n    if (storedLoginId) {\r\n      setLoginId(storedLoginId);\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (NewPassword !== confirmPassword) {\r\n      alert('Passwords do not match. Please try again.');\r\n      return;\r\n    }\r\n    if (NewPassword.length < 5) {\r\n      alert('Password must be at least 5 characters long.');\r\n      return;\r\n    }\r\n    // Create an object with the data to send to the server\r\n    const resetData = {\r\n      NewPassword,\r\n      LoginId,\r\n    };\r\n\r\n    // Make an HTTP POST request to the server\r\n    try {\r\n      const response = await fetch('http://localhost:5000/user-api/reset-password', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(resetData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        // Password reset was successful, handle accordingly\r\n        alert('Password reset successful');\r\n      } else {\r\n        // Password reset failed, handle accordingly\r\n        alert('Password reset failed');\r\n      }\r\n    } catch (error) {\r\n      console.error('An error occurred:', error);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-center\">\r\n        <Col md={8}>\r\n          <Card className=\"mt-4\">\r\n            <CardBody style={{ backgroundColor: '#eee0fc' }}>\r\n              <h2 className=\"mb-4\">Reset Password</h2>\r\n              <Form onSubmit={handleSubmit}>\r\n                <FormGroup>\r\n                  <Label for=\"NewPass\">New Password</Label>\r\n                  <Input\r\n                    style={{ backgroundColor: '#5432797b' }}\r\n                    type=\"password\"\r\n                    name=\"New Password\"\r\n                    id=\"NewPass\"\r\n                    placeholder=\"Enter New Password\"\r\n                    value={NewPassword}\r\n                    onChange={(e) => setNewPassword(e.target.value)}\r\n                     />\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                  <Label for=\"NewPass2\">Confirm Password</Label>\r\n                  <Input\r\n                    style={{ backgroundColor: '#5432797b' }}\r\n                    type=\"password\"\r\n                    name=\"New Password\"\r\n                    id=\"NewPass2\"\r\n                    placeholder=\"Enter New Password\"\r\n                    value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                     />\r\n                </FormGroup>\r\n                <div className=\"text-center mt-4\">\r\n                  <Button type='submit'\r\n                    className=\"px-4 py-2\"\r\n                    style={{ backgroundColor: '#543279', color: 'white' }}\r\n                  >\r\n                    Reset\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ResetPasswordForm\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","NewPassword","setNewPassword","_useState3","_useState4","confirmPassword","setConfirmPassword","_useState5","_useState6","LoginId","setLoginId","useEffect","storedLoginId","localStorage","getItem","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","resetData","wrap","_context","prev","next","preventDefault","alert","abrupt","length","fetch","method","headers","body","JSON","stringify","sent","ok","t0","console","error","stop","_x","apply","arguments","_jsx","Container","children","Row","className","Col","md","Card","_jsxs","CardBody","style","backgroundColor","Form","onSubmit","FormGroup","Label","for","Input","type","name","id","placeholder","value","onChange","target","Button","color"],"sourceRoot":""}